<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Z1Nhouse.github.io/</id>
    <title>Z1N&apos;s house</title>
    <updated>2020-01-30T13:23:50.146Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Z1Nhouse.github.io/"/>
    <link rel="self" href="https://Z1Nhouse.github.io//atom.xml"/>
    <subtitle>System.out.print(&quot;Welcome to Z1N&apos;s house！&quot;);</subtitle>
    <logo>https://Z1Nhouse.github.io//images/avatar.png</logo>
    <icon>https://Z1Nhouse.github.io//favicon.ico</icon>
    <rights>All rights reserved 2020, Z1N&apos;s house</rights>
    <entry>
        <title type="html"><![CDATA[楓之谷私服武陵道場NPC JS腳本]]></title>
        <id>https://Z1Nhouse.github.io//post/dIb0rHox</id>
        <link href="https://Z1Nhouse.github.io//post/dIb0rHox">
        </link>
        <updated>2020-01-30T07:15:11.000Z</updated>
        <content type="html"><![CDATA[<p>適用端口：120白狐端</p>
<h2 id="演示">演示：</h2>
<p>兌換道具數量可在腳本內自行更改。<br>
<img src="https://Z1Nhouse.github.io//post-images/1580368558648.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1580368561490.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1580368555672.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1580368633462.PNG" alt=""></p>
<ul>
<li>中文化：本人</li>
<li>NPC：2091005</li>
</ul>
<h2 id="腳本">腳本：</h2>
<pre><code class="language-javascript">var status = -1;
var sel;
var mapid;

function start() {
    mapid = cm.getMapId();

    if (mapid == 925020001) {
	cm.sendSimple(&quot;我的師傅是武陵中擁有最高功力的人，您現在是想告訴我您要挑戰我的師傅嗎？不要說我沒有警告過你。#b \n\r #L0#我想單人挑戰他#l \n\r #L1#我想組隊挑戰他#l \n\r #L2#我想兌換腰帶#l \n\r #L3#我想重設訓練點#l \n\r #L5#什麼是武陵修煉場？#l&quot;);
    } else if (isRestingSpot(mapid)) {
	cm.sendSimple(&quot;我很驚訝你已經安全地達到了這個樓層，但是不會再這麼容易了。你怎麼想？你想繼續嗎？#b \n\r #L0#是的，我要繼續。#l \n\r #L1#我想離開。#l \n\r #L2#我想儲存我的紀錄。#l&quot;);
    } else {
	cm.sendYesNo(&quot;什麼？你準備要離開了？您還可以進入下一個級別呢！你確定真的要離開？&quot;);
    }
}

function action(mode, type, selection) {
    if (mapid == 925020001) {
	if (mode == 1) {
	    status++;
	} else {
	    cm.dispose();
		return;
	}
	if (status == 0) {
	    sel = selection;

	    if (sel == 5) {
		cm.sendNext(&quot;我的師傅是武陵中擁有最高功力的人，且他也是建立這個武陵修練塔的人。武陵道場是一個龐大的訓練設施，共有38層。 每個樓層難度級別都不同。當然，憑藉您的功力，到達頂樓是不可能的...&quot;);
		cm.dispose();
	    } else if (sel == 3) {
		cm.sendYesNo(&quot;您知道如果重新設置訓練點，它將恢復為0，對吧？老實說，這不一定是壞事。重置訓練點並重新開始後，那麼您就可以再次收到皮帶了。 你想重設訓練點嗎？&quot;);
	    } else if (sel == 2) {
		cm.sendSimple(&quot;到目前為止，您的總訓練點數是 #b&quot;+cm.getDojoPoints()+&quot;#k。 我的師父惜愛有才華的人，因此，如果您積累了足夠的訓練點， 您將可以根據自己的訓練點獲得腰帶...\n\r #L0##i1132000:# #t1132000# (50)#l \n\r #L1##i1132001:# #t1132001# (150)#l \n\r #L2##i1132002:# #t1132002# (300)#l \n\r #L3##i1132003:# #t1132003# (450)#l \n\r #L4##i1132004:# #t1132004# (600)#l\r\n&quot;);
	    } else if (sel == 1) {
		if (cm.getParty() != null) {
		    if (cm.isLeader()) {
			cm.sendOk(&quot;您要立即進入嗎？&quot;);
		    } else {
			cm.sendOk(&quot;嘿，您甚至都不是隊長。您想偷偷溜進去做什麼？如果您想進入該場所，請告訴您的隊長與我交談。&quot;);
		    }
		}
	    } else if (sel == 0) {
		if (cm.getParty() != null) {
			cm.sendOk(&quot;請離開你的隊伍。&quot;);
			cm.dispose();
		}
		var record = cm.getQuestRecord(150000);
		var data = record.getCustomData();

		if (data != null) {
		    var idd = get_restinFieldID(parseInt(data));
		    if (idd != 925020002) {
		        cm.dojoAgent_NextMap(true, true , idd );
		        record.setCustomData(null);
		    } else {
			cm.sendOk(&quot;請等等再嘗試一次。&quot;);
		    }
		} else {
		    cm.start_DojoAgent(true, false);
		}
		cm.dispose();
	    // cm.sendYesNo(&quot;The last time you took the challenge yourself, you were able to reach Floor #18. I can take you straight to that floor, if you want. Are you interested?&quot;);
	    }
	} else if (status == 1) {
	    if (sel == 3) {
		cm.setDojoRecord(true);
		cm.sendOk(&quot;我已將您的訓練點重設為0&quot;);
	    } else if (sel == 2) {
		var record = cm.getDojoRecord();
		var required = 0;
		
		switch (record) {
		    case 0:
			required = 500;
			break;
		    case 1:
			required = 1500;
			break;
		    case 2:
			required = 3000;
			break;
		    case 3:
			required = 4500;
			break;
		    case 4:
			required = 6000;
			break;
			case 5:
			required = 9000;
			break;
			case 6:
			required = 11000;
			break;
			case 7:
			required = 15000;
			break;
		}

		if (record == selection &amp;&amp; cm.getDojoPoints() &gt;= required) {
		    var item = 1132000 + record;
		    if (cm.canHold(item)) {
			cm.gainItem(item, 1);
			cm.setDojoRecord(false);
		    } else {
			cm.sendOk(&quot;請檢查背包中是否還有空位。&quot;);
		    }
		} else {
		    cm.sendOk(&quot;您已經擁有或訓練點不足。請嘗試先獲取較低階的腰帶。&quot;);
		}
		cm.dispose();
	    } else if (sel == 1) {
		cm.start_DojoAgent(true, true);
		cm.dispose();
	    }
	}
    } else if (isRestingSpot(mapid)) {
	if (mode == 1) {
	    status++;
	} else {
	    cm.dispose();
	    return;
	}

	if (status == 0) {
	    sel = selection;

	    if (sel == 0) {
		if (cm.getParty() == null || cm.isLeader()) {
		    cm.dojoAgent_NextMap(true, true);
		} else {
		    cm.sendOk(&quot;只有隊長可以繼續前進。&quot;);
		}
		//cm.getQuestRecord(150000).setCustomData(null);
		cm.dispose();
	    } else if (sel == 1) {
		cm.askAcceptDecline(&quot;你想退出嗎？你真的想離開這裡嗎？&quot;);
	    } else if (sel == 2) {
		if (cm.getParty() == null) {
			var stage = get_stageId(cm.getMapId());

			cm.getQuestRecord(150000).setCustomData(stage);
			cm.sendOk(&quot;我剛剛記錄了您的進度。下次您到達這裡時，我會直接將您送到此樓層。&quot;);
			cm.dispose();
		} else {
			cm.sendOk(&quot;嘿..您無法記錄與隊伍合作的進度...&quot;);
			cm.dispose();
		}
	    }
	} else if (status == 1) {
	    if (sel == 1) {
		if (cm.isLeader()) {
			cm.warpParty(925020002);
		} else {
			cm.warp(925020002);
		}
	    }
	    cm.dispose();
	}
    } else {
	if (mode == 1) {
		if (cm.isLeader()) {
			cm.warpParty(925020002);
		} else {
			cm.warp(925020002);
		}
	}
	cm.dispose();
    }
}

function get_restinFieldID(id) {
	var idd = 925020002;
    switch (id) {
	case 1:
	    idd =  925020600;
	    break;
	case 2:
	    idd =  925021200;
	    break;
	case 3:
	    idd =  925021800;
	    break;
	case 4:
	    idd =  925022400;
	    break;
	case 5:
	    idd =  925023000;
	    break;
	case 6:
	    idd =  925023600;
	    break;
    }
    for (var i = 0; i &lt; 10; i++) {
	var canenterr = true;
	for (var x = 1; x &lt; 39; x++) {
		var map = cm.getMap(925020000 + 100 * x + i);
		if (map.getCharactersSize() &gt; 0) {
			canenterr = false;
			break;
		}
	}
	if (canenterr) {
		idd += i;
		break;
	}
}
	return idd;
}

function get_stageId(mapid) {
    if (mapid &gt;= 925020600 &amp;&amp; mapid &lt;= 925020614) {
	return 1;
    } else if (mapid &gt;= 925021200 &amp;&amp; mapid &lt;= 925021214) {
	return 2;
    } else if (mapid &gt;= 925021800 &amp;&amp; mapid &lt;= 925021814) {
	return 3;
    } else if (mapid &gt;= 925022400 &amp;&amp; mapid &lt;= 925022414) {
	return 4;
    } else if (mapid &gt;= 925023000 &amp;&amp; mapid &lt;= 925023014) {
	return 5;
    } else if (mapid &gt;= 925023600 &amp;&amp; mapid &lt;= 925023614) {
	return 6;
    }
    return 0;
}

function isRestingSpot(id) {
    return (get_stageId(id) &gt; 0);
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10056 - What is the Probability? ]]></title>
        <id>https://Z1Nhouse.github.io//post/OnsEcwuX-</id>
        <link href="https://Z1Nhouse.github.io//post/OnsEcwuX-">
        </link>
        <updated>2020-01-14T15:00:16.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=12&amp;page=show_problem&amp;problem=997">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=12&amp;page=show_problem&amp;problem=997</a></p>
<p><strong>Sample Input:</strong><br>
2<br>
2 0.166666 1<br>
2 0.166666 2</p>
<p><strong>Sample Output:</strong><br>
0.5455<br>
0.4545</p>
<p><strong>題目大意：給你一個骰子，設現在有n人，骰到某數獲勝(1/6)，計算出獲勝的機率。</strong></p>
<p>第一行輸入<code>幾組測資</code><br>
第二行輸入<code>參加遊戲的人數、獲勝的機率、第幾個人獲勝</code></p>
<p>※設N=人數、P=獲勝機率、I=第幾個人獲勝</p>
<p>那麼每個回合獲勝的機率即為：<br>
<img src="https://Z1Nhouse.github.io//post-images/1579014935551.png" alt=""></p>
<pre><code class="language-java">import java.util.*;
public class main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
		int count = sc.nextInt();

		for (int i = 0; i &lt; count; i++) {
		int N = sc.nextInt();
		double P = sc.nextDouble();
		int I = sc.nextInt();
	
		System.out.printf(&quot;%.4f&quot;, P == 0 ? P : P * Math.pow(1 - P, I - 1) / (1 - Math.pow(1 - P, N)));
		System.out.println();
		}

		sc.close();
    }
};

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 299 - Train Swapping]]></title>
        <id>https://Z1Nhouse.github.io//post/1eStMfufa</id>
        <link href="https://Z1Nhouse.github.io//post/1eStMfufa">
        </link>
        <updated>2020-01-14T14:28:30.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=235">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=235</a></p>
<p><strong>題目大意：首行輸入有幾台車需要排列，第二行輸入有幾節車廂，第三行輸入車廂的號碼，最後輸出需要幾次才能將車廂號碼由小到大排序完成(一次只能和一台換)。</strong></p>
<p>解題方向：使用氣泡排序法(Bubble Sort)</p>
<p>範例：假設今天有4節車廂，號碼為<code>4,3,2,1</code>，依照氣泡排序法排序：<br>
4 3 2 1<br>
3 2 1 4  3次(4→3,4→2,4→1)<br>
2 1 3 4  2次(3→2,3→1)<br>
1 2 3 4  1次(2→1)<br>
####################<br>
6次</p>
<pre><code class="language-java">import java.util.*;
public class main{
    public static void main(String[] args) {
        
            Scanner sc=new Scanner(System.in);
            
            int cases=sc.nextInt();
            
            for(int i =0;i&lt;cases;i++){
            	int L = sc.nextInt();
            	int arr[]=new int[L];
            	
            	for(int j=0;j&lt;L;j++){
            		arr[j] = sc.nextInt();
            	}
            	
            	int count=0;
            	
            	for(int j=0;j&lt;L-1;j++){
            		for(int k=0;k&lt;L-j-1;k++){
            			if(arr[k]&gt;arr[k+1]){
            				int temp=arr[k];
            				arr[k] = arr[k+1];
            				arr[k+1] = temp;
            				count++;
            			}
            		}
            	}
            	
            	System.out.println(&quot;Optimal train swapping takes &quot;+count+&quot; swaps.&quot;);
            }
            
            
    }
};
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10071 - Back to High School Physics]]></title>
        <id>https://Z1Nhouse.github.io//post/YvvDHQ42k</id>
        <link href="https://Z1Nhouse.github.io//post/YvvDHQ42k">
        </link>
        <updated>2020-01-14T14:23:34.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=1012">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=1012</a></p>
<p><strong>Sample Input</strong><br>
0 0<br>
5 12<br>
<strong>Sample Output</strong><br>
0<br>
120</p>
<p>從範例大概也能推測出來，輸入結果為兩數相乘的兩倍。</p>
<p><strong>題目大意：求出2倍時間的距離。</strong></p>
<p>可能是最簡單的題目了</p>
<pre><code class="language-java">import java.util.*;
public class main{
    public static void main(String[] args) {
        
            Scanner sc=new Scanner(System.in);
           	while(sc.hasNextInt()){
           		int v = sc.nextInt(),t = sc.nextInt();
           		System.out.println(v*t*2);
           	}
    }
};
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10409 - die game]]></title>
        <id>https://Z1Nhouse.github.io//post/eE2IFK7r0</id>
        <link href="https://Z1Nhouse.github.io//post/eE2IFK7r0">
        </link>
        <updated>2020-01-14T14:07:01.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=1350">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=1350</a></p>
<p><strong>Sample Input</strong><br>
1<br>
north<br>
3<br>
north<br>
east<br>
south<br>
0</p>
<p><strong>Sample Output</strong><br>
5<br>
1</p>
<p><strong>題目大意：先輸入一個數字，表示要翻轉幾次，最後輸出翻轉到的骰子點數。</strong></p>
<h2 id="骰子攤開圖">骰子攤開圖</h2>
<figure data-type="image" tabindex="1"><img src="http://www.mathland.idv.tw/life/dice.gif" alt=""></figure>
<h2 id="程式碼">程式碼</h2>
<pre><code class="language-java">Scanner sc=new Scanner(System.in);
		
		int cases; 
		while(sc.hasNextInt() &amp;&amp; (cases=sc.nextInt())!=0){
			
			int currPost=1;
			int N=2,W=3,S=5,E=4;
			
			for(int i=0;i&lt;cases;i++){
				String st=sc.next();
				if(st.equals(&quot;north&quot;)){
					N=currPost;
					currPost=S;
					S=7-N;
				}else if(st.equals(&quot;south&quot;)){
					S=currPost;
					currPost=N;
					N=7-S;
				}else if(st.equals(&quot;east&quot;)){
					E=currPost;
					currPost=W;
					W=7-E;
				}else if(st.equals(&quot;west&quot;)){
					W=currPost;
					currPost=E;
					E=7-W;
				}
			}
			
			System.out.println(currPost);
		}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【楓之谷私服架設 相關問題彙整+解決辦法】]]></title>
        <id>https://Z1Nhouse.github.io//post/WV7f4tGkt</id>
        <link href="https://Z1Nhouse.github.io//post/WV7f4tGkt">
        </link>
        <updated>2020-01-14T08:11:18.000Z</updated>
        <summary type="html"><![CDATA[<p>不限定版本，目前已成功架設的版本有：118,120,134,155,189... (目前專注於120白狐端)<br>
架設過程中遇到的問題都會列出來，順便分享當時的解決辦法。</p>
]]></summary>
        <content type="html"><![CDATA[<p>不限定版本，目前已成功架設的版本有：118,120,134,155,189... (目前專注於120白狐端)<br>
架設過程中遇到的問題都會列出來，順便分享當時的解決辦法。</p>
<!-- more -->
<h2 id="架設教程">架設教程</h2>
<p>先放上文字版的私服架設教程(Youtube上很多教程,87楓谷也有詳細的教程)：<br>
首先需要安裝<code>WAMP、N8、JDK8</code>，並且準備好端口以及相對應版本的客戶端。</p>
<ol>
<li>開啟WAMP並將WAMP切換到上線狀態</li>
<li>將端口內dist資料夾裡的java檔放到：</li>
</ol>
<pre><code>C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext
C:\Program Files\Java\jdk1.8.0_231\jre\lib\security
C:\Program Files\Java\jre1.8.0_231\lib\ext
C:\Program Files\Java\jre1.8.0_231\lib\security
</code></pre>
<p>依照個人JAVA安裝位置的不同請自行尋找對應的位置。<br>
3. 打開N8 檔案 - 新增連線 - 名稱<code>localhost</code>其他不動，按確定<br>
4. 在localhost上右鍵 - 新增資料庫 - <code>maplestory</code><br>
5. 點擊maplestory，在maplestory上按右鍵 - 執行批次任務檔案*(勾選遇到錯誤繼續) - 選擇端口內的sql檔案後按開始<br>
6. 開啟伺服器<br>
7. 製作登入器(若已有就直接打開吧，成功按play就可以開啟遊戲了)</p>
<p>下方為相關問題彙總：</p>
<h2 id="wamp">WAMP</h2>
<p>首先是新手最容易卡住的部分<strong>WAMP</strong>：</p>
<ol>
<li><strong>WAMP亮黃燈怎麼辦？或者提示could not execute menu item internal error怎麼辦？</strong></li>
</ol>
<p>A：首先測試<code>80</code>端口是否被占用，若有被占用很有可能是你安裝其他的東西被占用到端口。<br>
例如你可能安裝過xampp或者appserv(裡頭有自帶apache,MySQL...等)。</p>
<p><strong>如何測試？在wamp圖示上按<code>左鍵 - Apache - service - 測試80port</code></strong></p>
<p>如果發現80端被占用了，只需要把wamp的port改掉,把80改成8080或者8088...</p>
<p>如果還是不亮白色，看看你的<code>MySQL</code>是不是也被佔用了，以至於wamp的MySQL無法啟用</p>
<p><strong>Win+R輸入services.msc，找到mysql，如果啟動的話請關閉。</strong></p>
<p>圖文步驟：<a href="https://jingyan.baidu.com/article/48b37f8d0a02811a6564887b.html">https://jingyan.baidu.com/article/48b37f8d0a02811a6564887b.html</a><br>
─═♤═─‧─═♥═─‧─═♤═─‧─═♥═─‧─═♤═─</p>
<ol start="2">
<li>特別要注意的一點是，請一定要讓wamp在上線狀態...</li>
</ol>
<figure data-type="image" tabindex="1"><img src="https://Z1Nhouse.github.io//post-images/1578989823252.PNG" alt=""></figure>
<hr>
<h2 id="mysql">MySQL</h2>
<p><strong>MySQL</strong>相關問題：</p>
<ol>
<li>當點擊資料庫卻出現下方提示：<br>
<img src="https://Z1Nhouse.github.io//post-images/1578990068270.PNG" alt=""><br>
A：WAMP沒打開，或者沒將WAMP上線。</li>
</ol>
<hr>
<h2 id="伺服器">伺服器</h2>
<p>接著是開啟<strong>伺服器</strong>會遇到的問題：</p>
<ol>
<li>假設你有遇到如下的問題：</li>
</ol>
<figure data-type="image" tabindex="2"><img src="https://Z1Nhouse.github.io//post-images/1578989859254.PNG" alt=""></figure>
<p>A：請重新安裝<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">JDK8</a>並記得設定環境變數。<br>
設定java環境變數的方法：<a href="https://dotblogs.com.tw/897920/2017/04/29/031442">https://dotblogs.com.tw/897920/2017/04/29/031442</a><br>
─═♤═─‧─═♥═─‧─═♤═─‧─═♥═─‧─═♤═─</p>
<ol start="2">
<li>開啟伺服器時出現Invalid maximum heap size ....</li>
</ol>
<p>A：將開啟伺服器的檔案用記事本打開，把15000M改成1024M。<br>
<img src="https://Z1Nhouse.github.io//post-images/1578990014444.PNG" alt=""></p>
<hr>
<h2 id="遊戲開啟">遊戲開啟</h2>
<ol>
<li>
<p><strong>[Error:32a1000b]認證檔案無法下載%1</strong><br>
A：將破解過的ijl15.dll檔案覆蓋到主程式資料夾。<br>
<img src="https://truth.bahamut.com.tw/s01/201107/27ec263add9d1280c6d1abbbbf489f8b.JPG" alt=""><br>
─═♤═─‧─═♥═─‧─═♤═─‧─═♥═─‧─═♤═─</p>
</li>
<li>
<p><strong>Error code: Failed in finding proper screen made for Gr2D</strong><br>
A：將MapleStory.exe 右鍵 - 內容 - 相容性 -勾選以相容模式執行這個程式(Windows7)、以系統管理員的身分執行此程式<br>
<img src="https://static.wixstatic.com/media/2344aa_cffdd31e05b442be93b9ba483f0ee001~mv2.png/v1/fill/w_394,h_114,al_c,lg_1,q_85/2344aa_cffdd31e05b442be93b9ba483f0ee001~mv2.webp" alt=""></p>
</li>
</ol>
<h2 id="登入器製作">登入器製作</h2>
<ol>
<li>在客戶端資料夾內新增一個文字文件並打開編輯</li>
<li>輸入<code>start MapleStory.exe 127.0.0.1 8484</code></li>
<li>另存成<code>.bat</code>檔</li>
</ol>
<p>注意：127.0.0.1為本機位置，若是想給其他人玩，記得要修改成hamachi上的IP。</p>
<h2 id="改wz-腳本-src相關">改WZ、腳本、SRC相關</h2>
<p>常改的java檔：</p>
<pre><code>MapleServerHandler //把拍賣改成呼叫NPC改這個檔案的ENTER_MTS處
MaplePacketCreator //120白狐端高級美髮無效請改這個檔案
NPCConversationManager //改NPC的指令函數
MapleCharacter //角色的設定
client\messages //改指令
...其他的記不得
</code></pre>
<p>─═♤═─‧─═♥═─‧─═♤═─‧─═♥═─‧─═♤═─</p>
<ol>
<li>
<p>使用HaRepacker導出xml錯誤率高，建議導出xml一律使用WzRepacker<br>
像我有一次改String用HaRepacker導出xml，結果出現了下方的錯誤訊息，特別去翻了翻這個檔案才知道是<code>eqp.img</code>這個檔案的問題。<br>
<img src="https://Z1Nhouse.github.io//post-images/1580132657706.PNG" alt=""><br>
─═♤═─‧─═♥═─‧─═♤═─‧─═♥═─‧─═♤═─</p>
</li>
<li>
<p>WZ從新版本加東西進舊版本，記得要刪除舊版本沒有的節點，最基本的就是要刪除info裡頭的<code>setItemId</code>，還有要注意info裡頭圖標如果是使用連結記得把outlink跟hash刪除，然後把圖標重傳。<br>
─═♤═─‧─═♥═─‧─═♤═─‧─═♥═─‧─═♤═─</p>
</li>
<li>
<p><code>120白狐端</code>高級美髮沒反應的解決辦法(tools/MaplePacketCreator.java)：</p>
</li>
</ol>
<pre><code class="language-JAVA">public static MaplePacket getNPCTalkStyle(int npc, String talk, int... args)
mplew.writeShort(7);
將這句改成
mplew.writeShort(8);
</code></pre>
<p>─═♤═─‧─═♥═─‧─═♤═─‧─═♥═─‧─═♤═─</p>
<ol>
<li><code>120白狐端</code>將拍賣改成呼叫NPC<br>
記得在最開始先import</li>
</ol>
<pre><code>import tools.MaplePacketCreator;
import scripting.NPCScriptManager;
</code></pre>
<p>然後再搜索ENTER_MTS改成以下內容：</p>
<pre><code class="language-JAVA">case ENTER_MTS:

if (c.getPlayer().getLevel() &lt; 10) {
    c.getPlayer().dropMessage(5, &quot;尚未達到10級將無法使用。&quot;);
    } else {
    NPCScriptManager.getInstance().start(c, 9000020); //9000020為NPC id
    }
    c.getSession().write(MaplePacketCreator.enableActions());
break;
</code></pre>
<p>─═♤═─‧─═♥═─‧─═♤═─‧─═♥═─‧─═♤═─</p>
<ol start="5">
<li>商城的東西跟商店的東西在sql改；NPC腳本在端口的<code>Libs\scripts\npc</code>改；WZ的話不只要改端口的xml還有客戶端的WZ檔；再其他的就是改SRC了。</li>
</ol>
<p>─═♤═─‧─═♥═─‧─═♤═─‧─═♥═─‧─═♤═─</p>
<ol start="6">
<li>商城販賣的商品如何統一一個價錢？<br>
打開http://127.0.0.1/phpmyadmin/ 選擇你私服的資料庫，在sql輸入sql語法</li>
</ol>
<pre><code class="language-sql">UPDATE `cashshop_modified_items` SET `discount_price`='1'   
</code></pre>
<p>這是將商城sql裡頭的價格欄位全部調至1，若你想個別調整，則輸入：</p>
<pre><code class="language-sql">UPDATE `cashshop_modified_items` SET `discount_price`='1' WHERE (`serial`='20000026')
</code></pre>
<p><strong>serial = 商品序列號，你也可以將serial調整成其他條件，比如只改某一種類別的商品。</strong></p>
<hr>
<h2 id="相關檔案">相關檔案</h2>
<ul>
<li><code>ijl15.dll</code>：<a href="https://mega.nz/#!5wY3hAjL!IH1hoWXOp52swXgiuIW7dn6YMRNhGltf6bMQ_s-gNJk">點擊下載</a></li>
<li></li>
<li>87楓之谷私服架設教學及工具包：<a href="https://www.87ms.net/erection">私服架設教學及工具包</a></li>
</ul>
<h2 id="推薦網站">推薦網站</h2>
<ol>
<li>代碼搜索</li>
</ol>
<ul>
<li><a href="https://bingfeng.tw/wz/map.html">地圖</a></li>
<li><a href="https://bingfeng.tw/wz/item.html">物品</a></li>
<li><a href="https://bingfeng.tw/wz/npc.html">NPC</a></li>
</ul>
<ol start="2">
<li>
<p>簡易 JS 語法<br>
<a href="http://aicltw.blogspot.com/2017/06/js.html">http://aicltw.blogspot.com/2017/06/js.html</a></p>
</li>
<li>
<p>臉型新增的邏輯與概念攻略(髮型也相同)<br>
<a href="http://aicltw.blogspot.com/2017/07/blog-post_15.html">http://aicltw.blogspot.com/2017/07/blog-post_15.html</a></p>
</li>
<li>
<p>新增戒指戰略指南<br>
<a href="http://aicltw.blogspot.com/2018/05/blog-post_8.html">http://aicltw.blogspot.com/2018/05/blog-post_8.html</a></p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 11349 Symmetric Matrix]]></title>
        <id>https://Z1Nhouse.github.io//post/BdPgbm1W1</id>
        <link href="https://Z1Nhouse.github.io//post/BdPgbm1W1">
        </link>
        <updated>2020-01-13T06:27:38.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=2324">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=2324</a></p>
<p><strong>Sample Input</strong><br>
2<br>
N = 3<br>
5 1 3<br>
2 0 2<br>
3 1 5</p>
<p>N = 3<br>
5 1 3<br>
2 0 2<br>
0 1 5</p>
<p><strong>Sample Output</strong></p>
<p>Test #1: Symmetric.<br>
Test #2: Non-symmetric.</p>
<p><strong>題目大意：判斷是否為對稱矩陣，(1,1)=(3,3),(1,2)=(3,2),(1,3)=(3,1),(2,1)=(2,3)</strong></p>
<p>注意：若矩陣A與其置換矩陣A^T相等，則A稱為對稱矩陣，且對稱矩陣必為方陣。<br>
(A^T)ij=(A)ji</p>
<pre><code class="language-java">import java.util.*;
public class main{
    public static void main(String[] args) {
            Scanner sc=new Scanner(System.in);
           	int n = sc.nextInt(); //有幾個對稱矩陣需要判斷
           	
           	for(int i=0;i&lt;n;i++){
           		String t1=sc.next(),t2=sc.next(); //t1為N , t2為=
           		
           		int k = sc.nextInt(); //幾乘幾的對稱矩陣
           		long arr[] = new long [k*k];
           		int size = k*k;
           		
           		for(int j=0;j&lt;size;j++){
           			arr[j] = sc.nextInt(); //輸入矩陣所有的值
           		}
           		
           		boolean flag=true;
           		
           		for(int j=0;j&lt;size;j++){
           			if(arr[j]&lt;0 || arr[j]!=arr[size-1-j]){ //判斷是否為對稱
           				flag=false;
           				break;
           			}
           		}
           		if(flag){
           			System.out.println(&quot;Test #&quot;+(i+1)+&quot;: Symmetric.&quot;);
           		}else{
           			System.out.println(&quot;Test #&quot;+(i+1)+&quot;: Non-symmetric.&quot;);
           		}
           		
           	}
    }
};

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 11417 - GCD]]></title>
        <id>https://Z1Nhouse.github.io//post/fa6-qmAAf</id>
        <link href="https://Z1Nhouse.github.io//post/fa6-qmAAf">
        </link>
        <updated>2020-01-13T05:39:24.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=2412">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=2412</a></p>
<p><strong>Sample Input</strong><br>
10<br>
100<br>
500<br>
0</p>
<p><strong>Sample Output</strong><br>
67<br>
13015<br>
442011</p>
<p><strong>題目大意：題目已經把程式碼給了，只需要再寫一個最大公因式的副程式。</strong></p>
<p>透過輾轉相除法求最大公因式，重複執行大減小</p>
<ol>
<li>其中一方結果為1，表示互質</li>
<li>其中一方結果為0，另一數為GCD</li>
</ol>
<pre><code class="language-java">import java.util.*;
public class main{

	public static int GCD(int i ,int j){
		return (j==0) ? i : GCD(j , i%j);
	}
	
    public static void main(String[] args) {
        
            Scanner sc=new Scanner(System.in);
            
            while(sc.hasNext()){
            	int G=0,N=sc.nextInt();
            	
            	if(N == 0){
            		break;
            	}
            	
            	for(int i =1;i&lt;N;i++){
            		for(int j =i+1;j&lt;=N;j++){
            			G+=GCD(i,j);
            		}
            	}
            	System.out.println(G);
            }
            
    }
};

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10008 - What's Cryptanalysis?]]></title>
        <id>https://Z1Nhouse.github.io//post/uz3BVb7RV</id>
        <link href="https://Z1Nhouse.github.io//post/uz3BVb7RV">
        </link>
        <updated>2020-01-12T16:20:50.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=12&amp;page=show_problem&amp;problem=949">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=12&amp;page=show_problem&amp;problem=949</a></p>
<p><strong>Sample Input</strong><br>
3 <code>要判斷幾行文字</code><br>
This is a test.<br>
Count me 1 2 3 4 5.<br>
Wow!!!!  Is this question easy?</p>
<p><strong>Sample Output</strong><br>
S 7<br>
T 6<br>
I 5<br>
E 4<br>
O 3<br>
A 2<br>
H 2<br>
N 2<br>
U 2<br>
W 2<br>
C 1<br>
M 1<br>
Q 1<br>
Y 1</p>
<p>注意：</p>
<ol>
<li>只需要計算英文字母且大小寫不分，範例輸出可看出皆為大寫，因此直接將所有英文字母轉為大寫。</li>
<li>按照英文字母的使用頻率由小到大輸出，若有一樣次數的英文字母則由字母先後順序輸出。</li>
</ol>
<pre><code class="language-java">import java.util.*;
public class main{
    public static void main(String[] args) {
        
            Scanner sc=new Scanner(System.in);
            int data[] = new int[26];
            int Length=0,count=sc.nextInt(); //count代表有幾行字串
            String a = sc.nextLine(); 
            while(count-- &gt;0){
            	String temp = sc.nextLine().toUpperCase(); //字串內容,將之轉為大寫
            	Length += temp.length();
            	
            	for(int i=0 ; i&lt;temp.length();i++){
            		if('A'&lt;=temp.charAt(i) &amp;&amp; temp.charAt(i)&lt;='Z'){
            			data[(int)temp.charAt(i)-65]++; //將英文字母存至對應數的陣列中,若有重複則++ , 這邊的-65是ASCII減去大寫A
            		}
            	}
            
            }
            
            while(--Length&gt;0){ 
            	for(int i=0;i&lt;26;i++){
            		if(data[i]==Length){
            			System.out.println(((char)(i+65))+&quot; &quot;+data[i]);
            		}
            	
            	}
            
            }
    }
};

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10420 - List of Conquests]]></title>
        <id>https://Z1Nhouse.github.io//post/Frm4A2j3f</id>
        <link href="https://Z1Nhouse.github.io//post/Frm4A2j3f">
        </link>
        <updated>2020-01-12T14:12:55.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=onlinejudge&amp;page=show_problem&amp;problem=1361">https://onlinejudge.org/index.php?option=onlinejudge&amp;page=show_problem&amp;problem=1361</a></p>
<p><strong>題目大意：按照英文字母順序由小到大排序，先排序國家再計算每個國家愛人人數。</strong></p>
<p><strong>Sample Input</strong></p>
<p>3 <code>愛人的數目</code><br>
Spain Donna Elvira <code>國家與愛人的名字</code><br>
England Jane Doe<br>
Spain Donna Anna</p>
<p><strong>Sample Output</strong></p>
<p>England 1<br>
Spain 2</p>
<ol>
<li>按照國家名稱由小而大的順序</li>
<li>輸出國家的名稱與愛人人數</li>
</ol>
<h2 id="java-map">JAVA MAP</h2>
<p>此題可利用java map，下方只提本題會使用到的部分。</p>
<h3 id="創建">創建</h3>
<pre><code class="language-java">Map&lt;String,Integer&gt; map =new HashMap&lt;String, Integer&gt;();
</code></pre>
<p>其中鍵值對中的值不可為int，必須為Integer，前者是代表key（關鍵標識符，類似sql中的主鍵），後者代表 value，代表主鍵對應的值</p>
<h3 id="加入值">加入值</h3>
<pre><code class="language-java">map.put(&quot;A&quot;,1);
map.put(&quot;B&quot;,2); //通過put的方式加入，對應出事創建好的參數類型
</code></pre>
<h3 id="判斷">判斷</h3>
<ul>
<li>通過key判斷這個值是不是已經存儲，返回一個boolean類型:</li>
</ul>
<pre><code class="language-java">map.containsKey(&quot;A&quot;);
</code></pre>
<ul>
<li>通過value判斷這個值是不是已經存儲：</li>
</ul>
<pre><code class="language-java">map.containsValue(2);
</code></pre>
<h3 id="增強for循環遍歷">增強for循環遍歷</h3>
<ul>
<li>使用keySet()遍歷</li>
</ul>
<pre><code class="language-java">for (String key : map.keySet()) {
    System.out.println(key + &quot; ：&quot; + map.get(key));
}
</code></pre>
<h2 id="程式碼">🌟程式碼</h2>
<pre><code class="language-java">import java.util.*;
public class main{

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);  
        Map&lt;String, Integer&gt; countries = new TreeMap&lt;String, Integer&gt;();  
        int n = sc.nextInt();  

        while ((n--) &gt; 0) {  
            String country = sc.next();  
            if (!countries.containsKey(country)) {  
                    countries.put(country, 1);  
            }  
            else  
            {  
                countries.put(country, countries.get(country)+1);  
            }  
              
            sc.nextLine();  
        }  
          
        for(String each:countries.keySet())  
        {  
            System.out.println(each+&quot; &quot;+countries.get(each));  
              
        }
	}
}
</code></pre>
]]></content>
    </entry>
</feed>