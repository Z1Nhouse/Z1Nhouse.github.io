<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Z1Nhouse.github.io/</id>
    <title>Z1N&apos;s house</title>
    <updated>2020-01-12T16:39:38.633Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Z1Nhouse.github.io/"/>
    <link rel="self" href="https://Z1Nhouse.github.io//atom.xml"/>
    <subtitle>System.out.print(&quot;Welcome to Z1N&apos;s house！&quot;);</subtitle>
    <logo>https://Z1Nhouse.github.io//images/avatar.png</logo>
    <icon>https://Z1Nhouse.github.io//favicon.ico</icon>
    <rights>All rights reserved 2020, Z1N&apos;s house</rights>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10008 - What's Cryptanalysis?]]></title>
        <id>https://Z1Nhouse.github.io//post/uz3BVb7RV</id>
        <link href="https://Z1Nhouse.github.io//post/uz3BVb7RV">
        </link>
        <updated>2020-01-12T16:20:50.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=12&amp;page=show_problem&amp;problem=949">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=12&amp;page=show_problem&amp;problem=949</a></p>
<p><strong>Sample Input</strong><br>
3 <code>要判斷幾行文字</code><br>
This is a test.<br>
Count me 1 2 3 4 5.<br>
Wow!!!!  Is this question easy?</p>
<p><strong>Sample Output</strong><br>
S 7<br>
T 6<br>
I 5<br>
E 4<br>
O 3<br>
A 2<br>
H 2<br>
N 2<br>
U 2<br>
W 2<br>
C 1<br>
M 1<br>
Q 1<br>
Y 1</p>
<p>注意：</p>
<ol>
<li>只需要計算英文字母且大小寫不分，範例輸出可看出皆為大寫，因此直接將所有英文字母轉為大寫。</li>
<li>按照英文字母的使用頻率由小到大輸出，若有一樣次數的英文字母則由字母先後順序輸出。</li>
</ol>
<pre><code class="language-java">import java.util.*;
public class main{
    public static void main(String[] args) {
        
            Scanner sc=new Scanner(System.in);
            int data[] = new int[26];
            int Length=0,count=sc.nextInt(); //count代表有幾行字串
            String a = sc.nextLine(); 
            while(count-- &gt;0){
            	String temp = sc.nextLine().toUpperCase(); //字串內容,將之轉為大寫
            	Length += temp.length();
            	
            	for(int i=0 ; i&lt;temp.length();i++){
            		if('A'&lt;=temp.charAt(i) &amp;&amp; temp.charAt(i)&lt;='Z'){
            			data[(int)temp.charAt(i)-65]++; //將英文字母存至對應數的陣列中,若有重複則++ , 這邊的-65是ASCII減去大寫A
            		}
            	}
            
            }
            
            while(--Length&gt;0){ 
            	for(int i=0;i&lt;26;i++){
            		if(data[i]==Length){
            			System.out.println(((char)(i+65))+&quot; &quot;+data[i]);
            		}
            	
            	}
            
            }
    }
};

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10420 - List of Conquests]]></title>
        <id>https://Z1Nhouse.github.io//post/Frm4A2j3f</id>
        <link href="https://Z1Nhouse.github.io//post/Frm4A2j3f">
        </link>
        <updated>2020-01-12T14:12:55.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=onlinejudge&amp;page=show_problem&amp;problem=1361">https://onlinejudge.org/index.php?option=onlinejudge&amp;page=show_problem&amp;problem=1361</a></p>
<p><strong>題目大意：按照英文字母順序由小到大排序，先排序國家再計算每個國家愛人人數。</strong></p>
<p><strong>Sample Input</strong></p>
<p>3 <code>愛人的數目</code><br>
Spain Donna Elvira <code>國家與愛人的名字</code><br>
England Jane Doe<br>
Spain Donna Anna</p>
<p><strong>Sample Output</strong></p>
<p>England 1<br>
Spain 2</p>
<ol>
<li>按照國家名稱由小而大的順序</li>
<li>輸出國家的名稱與愛人人數</li>
</ol>
<h2 id="java-map">JAVA MAP</h2>
<p>此題可利用java map，下方只提本題會使用到的部分。</p>
<h3 id="創建">創建</h3>
<pre><code class="language-java">Map&lt;String,Integer&gt; map =new HashMap&lt;String, Integer&gt;();
</code></pre>
<p>其中鍵值對中的值不可為int，必須為Integer，前者是代表key（關鍵標識符，類似sql中的主鍵），後者代表 value，代表主鍵對應的值</p>
<h3 id="加入值">加入值</h3>
<pre><code class="language-java">map.put(&quot;A&quot;,1);
map.put(&quot;B&quot;,2); //通過put的方式加入，對應出事創建好的參數類型
</code></pre>
<h3 id="判斷">判斷</h3>
<ul>
<li>通過key判斷這個值是不是已經存儲，返回一個boolean類型:</li>
</ul>
<pre><code class="language-java">map.containsKey(&quot;A&quot;);
</code></pre>
<ul>
<li>通過value判斷這個值是不是已經存儲：</li>
</ul>
<pre><code class="language-java">map.containsValue(2);
</code></pre>
<h3 id="增強for循環遍歷">增強for循環遍歷</h3>
<ul>
<li>使用keySet()遍歷</li>
</ul>
<pre><code class="language-java">for (String key : map.keySet()) {
    System.out.println(key + &quot; ：&quot; + map.get(key));
}
</code></pre>
<h2 id="程式碼">🌟程式碼</h2>
<pre><code class="language-java">import java.util.*;
public class main{

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);  
        Map&lt;String, Integer&gt; countries = new TreeMap&lt;String, Integer&gt;();  
        int n = sc.nextInt();  

        while ((n--) &gt; 0) {  
            String country = sc.next();  
            if (!countries.containsKey(country)) {  
                    countries.put(country, 1);  
            }  
            else  
            {  
                countries.put(country, countries.get(country)+1);  
            }  
              
            sc.nextLine();  
        }  
          
        for(String each:countries.keySet())  
        {  
            System.out.println(each+&quot; &quot;+countries.get(each));  
              
        }
	}
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10101 - Bangla Numbers]]></title>
        <id>https://Z1Nhouse.github.io//post/vfdBp0VQV</id>
        <link href="https://Z1Nhouse.github.io//post/vfdBp0VQV">
        </link>
        <updated>2020-01-12T06:40:18.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=1042">https://onlinejudge.org/index.php?option=onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=1042</a></p>
<p><strong>題目大意：把輸入的阿拉伯數字改成孟加拉單位輸出</strong><br>
kuti = 10,000,000 (千萬)<br>
lakh = 100,000 (十萬)<br>
hajar = 1000 (千)<br>
shata = 100 (百)</p>
<p><strong>Sample Input</strong><br>
23764<br>
45897458973958<br>
0</p>
<p><strong>Sample Output</strong></p>
<ol>
<li>23 hajar 7 shata 64</li>
<li>
<ol start="2">
<li>45 lakh 89 hajar 7 shata 45 kuti 89 lakh 73 hajar 9 shata 58</li>
</ol>
</li>
<li>0</li>
</ol>
<p>超過7位數就重新編排，透過kuti連接。</p>
<pre><code class="language-java">import java.util.*;

public class Main {
	public static void calculate(long num) {
		if (num == 0) 
			return;
		
		if (num &gt;= 10000000) {	
			calculate(num/10000000);
			System.out.print(&quot; kuti&quot;);
			calculate(num%10000000);
		}
    
		else if (num &gt;= 100000) {
			System.out.print(&quot; &quot; + num/100000 + &quot; lakh&quot;);
			calculate(num%100000);
		}
    
		else if (num &gt;= 1000) {
			System.out.print(&quot; &quot; + num/1000 + &quot; hajar&quot;);
			calculate(num%1000);
		}
    
		else if (num &gt;= 100) {
			System.out.print(&quot; &quot; + num/100 + &quot; shata&quot;);
			calculate(num%100);
		}
    
		else if (num % 100 != 0) 
			System.out.print(&quot; &quot; + num);
	}
	
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		int count = 0;
		while (sc.hasNextLine()) {
			count++;
			long num = Long.parseLong(sc.nextLine());
			System.out.printf(&quot;%4d.&quot;, count);
      
			if (num == 0)
				System.out.printf(&quot; 0&quot;);
			else
				calculate(num);
        
			System.out.println();
		}
	}
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10929 - You can say 11]]></title>
        <id>https://Z1Nhouse.github.io//post/VlC1oUM</id>
        <link href="https://Z1Nhouse.github.io//post/VlC1oUM">
        </link>
        <updated>2020-01-12T06:11:21.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=onlinejudge&amp;page=show_problem&amp;problem=1870">https://onlinejudge.org/index.php?option=onlinejudge&amp;page=show_problem&amp;problem=1870</a></p>
<p><strong>Sample Input</strong></p>
<p>112233<br>
30800<br>
2937<br>
323455693<br>
5038297<br>
112234<br>
0</p>
<p><strong>Sample Output</strong></p>
<p>112233 is a multiple of 11.<br>
30800 is a multiple of 11.<br>
2937 is a multiple of 11.<br>
323455693 is a multiple of 11.<br>
5038297 is a multiple of 11.<br>
112234 is not a multiple of 11.</p>
<p><strong>題目大意：判斷一個1000位以下的正整數是否為11的倍數，若輸入0則停止程式。</strong></p>
<h2 id="解題方向">解題方向：</h2>
<ol>
<li>
<p>判斷11的倍數：<br>
a)奇位數總和減去偶位數總和等於0或11的倍數<br>
b)直接取11的餘數看是否為0</p>
</li>
<li>
<p>位數最多到1000位，所以用BigInteger</p>
</li>
</ol>
<h3 id="biginteger的用法">BigInteger的用法：</h3>
<p>透過字串將數字傳給BigInteger。</p>
<p>常使用的建構子有:</p>
<ul>
<li><strong>BigInteger(String val)</strong> : 將BigInteger的十進制String表示轉換為BigInteger。</li>
<li><strong>BigInteger(String val, int radix)</strong>: 用於轉換為BigInteger的指定基數為一個BigInteger的字符串表示形式。</li>
</ul>
<p>更多用法請看<a href="http://tw.gitbook.net/java/math/java_math_biginteger.html">Java.math.BigInteger類實例</a></p>
<p>若是有不能處理的數字<code>142543256745643257535</code>則使用BigInteger處理：</p>
<pre><code class="language-java">String bigIntStr = &quot;142543256745643257535&quot;;  
BigInteger a = new BigInteger(bigIntStr);  
System.out.print(a);
</code></pre>
<p>執行結果：142543256745643257535</p>
<h2 id="解法">解法</h2>
<pre><code class="language-java">
import java.util.*;
import java.math.BigInteger; //記得要將BigInteger import進來

public class main{
    public static void main(String[] args) {
        
            Scanner sc=new Scanner(System.in);
            while(sc.hasNext()){
            String y = sc.next();
            BigInteger x = new BigInteger(y);  //透過字串將數字傳給BigInteger

            if(x.equals(BigInteger.ZERO))break; //當BigInteger值等於0時結束程式
            if(x.mod(new BigInteger(&quot;11&quot;)).equals(BigInteger.ZERO)){ //當BigInteger值能被11整除時代表該數為11的倍數
            System.out.println(y+&quot; is a multiple of 11.&quot;);
            }else{
            System.out.println(y+&quot; is not a multiple of 11.&quot;);
            }
            
            }
    }
};


</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 100 - The 3n+1 problem]]></title>
        <id>https://Z1Nhouse.github.io//post/ljIr-M6_B</id>
        <link href="https://Z1Nhouse.github.io//post/ljIr-M6_B">
        </link>
        <updated>2020-01-11T14:04:12.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?Itemid=8&amp;option=com_onlinejudge&amp;page=show_problem&amp;problem=36">https://onlinejudge.org/index.php?Itemid=8&amp;option=com_onlinejudge&amp;page=show_problem&amp;problem=36</a></p>
<p><strong>Sample Input</strong><br>
1  10<br>
100  200<br>
201  210<br>
900  1000</p>
<p><strong>Sample Output</strong><br>
1  10  20<br>
100  200  125<br>
201  210  89<br>
900  1000  174</p>
<p><strong>題目大意：給定一個範圍(a~b)，範圍內所有整數都跑一遍3n+1問題，並計算每個數需要多少次迴圈才能得到1，最後輸出範圍內需跑迴圈數最多的值。</strong></p>
<p>3n+1跑法：如果n是奇數則n = 3n+1，否則n = n/2</p>
<p>注意：假設input為<code>22</code>，跑法則為：<code>22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1</code>，因此22的迴圈次數為16次(22本身也算1次)。</p>
<pre><code class="language-java">import java.util.*;
public class main{
    public static void main(String[] args) {
            Scanner sc=new Scanner(System.in);

            while(sc.hasNextInt()){
            
            int a=sc.nextInt(),b=sc.nextInt();
            
            if(a&gt;b){ //因為給定的兩數範圍並不一定是小到大,若a&gt;b需要做調換動作
            int c = a;
            a = b;
            b = c;
            }

            int aa=a,bb=b,max=0; //將調換後的a,b存入aa,bb , max為最大迴圈數

            for(int i = a;i&lt;=b ; i++){
            	int n = i;
            	int l = 1;
            	while(true){
            	
            	if(n==1)break;
            	l++;

            	if(n%2==0){
            	n = n/2;
            	}else{
            	n = n*3+1;
            	}
            	
            	if(l&gt;max){
            	max = l;
            	}
            	
            	}
            }
            System.out.println(aa+&quot; &quot;+bb+&quot; &quot;+max);
            }
       
    }
    }
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10035 - Primary Arithmetic]]></title>
        <id>https://Z1Nhouse.github.io//post/VOy2ZIurR</id>
        <link href="https://Z1Nhouse.github.io//post/VOy2ZIurR">
        </link>
        <updated>2020-01-11T13:21:24.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=12&amp;page=show_problem&amp;problem=976">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=12&amp;page=show_problem&amp;problem=976</a></p>
<p><strong>Sample Input</strong><br>
123 456<br>
555 555<br>
123 594<br>
0 0<br>
<strong>Sample Output</strong><br>
No carry operation.<br>
3 carry operations.<br>
1 carry operation.</p>
<p><strong>題目大意：判斷兩整數相加後產生多少個進位，當兩數皆為0則停止程式。</strong><br>
<code>特別要注意的是，本題所有變數都為int，因此不會有小數的出現。</code></p>
<p>以<code>123+456</code>作為範例，首先第一輪sum=123%10+456%10+carry = 3+6+0 = 9 , sum沒有大於10所以carries保持為0,carry=sum/10所以也是0 , 接著a = a/10 =&gt; 123/10 = 12, b = b/10 =&gt; 456/10 = 45;</p>
<p>第二輪sum = 12%10+45%10+carry = 2+5+0 = 7 , carry=0,carries=0 , a = 12/10 = 1 , b = 45/10 = 4;</p>
<p>第三輪sum = 1%10+4%10+carry = 1+4+0 = 5 ,carry=0,carries=0 , a = 1/10 = 0 , b = 4/10 = 0 , 是以a與b皆為0，程式結束。</p>
<p>而最終carries = 0  , 所以output為No carry operation.</p>
<figure data-type="image" tabindex="1"><img src="https://Z1Nhouse.github.io//post-images/1578750760319.png" alt=""></figure>
<pre><code class="language-java">import java.util.*;
public class main{
    public static void main(String[] args) {
            Scanner sc=new Scanner(System.in);
            
            while(true){
            int a=sc.nextInt(),b=sc.nextInt();
            if(a==0&amp;&amp;b==0){ //當兩數皆為0則停止程式
            	break;
            }
        	
        	int carry=0,carries=0;
        	
        	while(a!=0||b!=0){ //a或者b任意一個不為0則繼續判斷
        	
        	int sum = a%10+b%10+carry; //從個位數慢慢往前推,判斷有無進位
        	
        	if(sum&gt;=10){
        		++carries;
        	}
        	
        	carry = sum/10;
        	a /= 10;  // a=a/10 每判斷完一個位數,就將它捨去
        	b /= 10;  // b=b/10 每判斷完一個位數,就將它捨去
        	
        	}
        	
        	if(carries==0){
        	System.out.println(&quot;No carry operation.&quot;);
        	}else if(carries==1){
        	System.out.println(&quot;1 carry operation.&quot;);
        	}else{
        	System.out.println(carries + &quot; carry operations.&quot;);
        	}
            
            }
           
        }
    }

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10055 - Hashmat the Brave Warrior]]></title>
        <id>https://Z1Nhouse.github.io//post/oOp8OrXuI</id>
        <link href="https://Z1Nhouse.github.io//post/oOp8OrXuI">
        </link>
        <updated>2020-01-11T13:12:08.000Z</updated>
        <content type="html"><![CDATA[<p>題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=996">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=996</a></p>
<p><strong>Sample Input</strong><br>
10 12<br>
10 14<br>
100 200<br>
<strong>Sample Output</strong><br>
2<br>
4<br>
100</p>
<p>題目大意：取兩數差，題目限制最大值為2^32，因此需要使用long。</p>
<pre><code class="language-java">import java.util.*;
public class main{
    public static void main(String[] args) {
            Scanner sc=new Scanner(System.in);
            while(sc.hasNextLong()){
            long a = sc.nextLong(),b = sc.nextLong();
    		System.out.println(Math.abs(a-b));
    		}
    }
};

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】UVA 10041 - Vito's Family]]></title>
        <id>https://Z1Nhouse.github.io//post/UNd1D1Awb</id>
        <link href="https://Z1Nhouse.github.io//post/UNd1D1Awb">
        </link>
        <updated>2020-01-11T13:00:40.000Z</updated>
        <content type="html"><![CDATA[<p>UVa10041 Vito's family 題目原文：<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=982">https://onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=982</a></p>
<p><strong>Sample Input</strong><br>
2<br>
2 2 4<br>
3 2 4 6<br>
<strong>Sample Output</strong><br>
2<br>
4</p>
<p>解題順序：</p>
<ol>
<li>先將成員由小到大排序</li>
<li>找出該組成員的中位數</li>
<li>輸出中位數成員到各成員的距離總和。</li>
</ol>
<p>現在來看範例：<br>
<strong>Sample Input</strong><br>
2  <code>&lt;--這邊的2指的是有兩組要比對的資料</code><br>
2 2 4     <code>&lt;--第一個2表示該組有2個成員，分別為2,4</code><br>
3 2 4 6   <code>&lt;--該組有3個成員，分別為2,4,6</code><br>
<strong>Sample Output</strong><br>
2 <code>以2為中位數，所有成員與2的距離為|4-2|=2</code><br>
4 <code>以4為中位數，所有成員與4的距離為|2-4|+|6-4|=4</code></p>
<p>當成員數為偶數時，中間兩個數任意選一個即可。</p>
<pre><code class="language-java">import java.util.*;
public class main{
    public static void main(String[] args) {
     
            Scanner sc=new Scanner(System.in);
            int n= sc.nextInt(); //共幾組
            while((--n)&gt;=0){
            
            int p = sc.nextInt(); //幾個成員
            int house[] = new int[p]; //令一個成員數大小的陣列
            
            for(int i = 0 ; i&lt;p ; i++){
            	house[i] = sc.nextInt(); //輸入成員的值
            }
            
            Arrays.sort(house); //將成員由小到大排序
            
            int len=0;
            
            for(int i = 0 ; i&lt;p ; i++){
            	len+=Math.abs(house[i]-house[i/2]); //計算所有成員與中位數的絕對值距離總和
            }
            System.out.println(len);
            }
    }
};
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何使用JS讓PHP表單內容填寫空白時跳出提醒？]]></title>
        <id>https://Z1Nhouse.github.io//post/gd_Z3CfkC</id>
        <link href="https://Z1Nhouse.github.io//post/gd_Z3CfkC">
        </link>
        <updated>2020-01-09T06:28:52.000Z</updated>
        <content type="html"><![CDATA[<p>直接上代碼，應該不需要解釋了吧。</p>
<p>先在<code>&lt;body&gt;..&lt;/body&gt;</code>之間新建一個表單：</p>
<pre><code>&lt;form method=&quot;POST&quot; action=&quot;alert1.php&quot; name=&quot;Regist&quot; onsubmit=&quot;return formcheck();&quot;&gt;

帳號：&lt;input type=&quot;text&quot; name=&quot;id&quot;&gt;
&lt;input type=&quot;submit&quot; value=&quot;送出&quot;&gt;

&lt;/form&gt;
</code></pre>
<p>在<code>&lt;head&gt;...&lt;/head&gt;</code>之間插入function：</p>
<pre><code>&lt;script language=&quot;javascript&quot;&gt;

function formcheck(){

    if(Regist.id.value==&quot;&quot;){
        alert(&quot;請填寫帳號！&quot;);
        Regist.id.focus();  //focus到錯誤欄位
        return false;
    }
    return true;
}

&lt;/script&gt;
</code></pre>
<p>如此一來只要帳號欄位空白送出時，瀏覽器就會跳出提醒視窗&quot;請填寫帳號!&quot;，並且focus到帳號欄位。</p>
<figure data-type="image" tabindex="1"><img src="https://Z1Nhouse.github.io//post-images/1578551667434.PNG" alt=""></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[帶你兩分鐘了解什麼是關聯式資料庫？]]></title>
        <id>https://Z1Nhouse.github.io//post/IPygPpR2t</id>
        <link href="https://Z1Nhouse.github.io//post/IPygPpR2t">
        </link>
        <updated>2020-01-09T06:16:41.000Z</updated>
        <content type="html"><![CDATA[<h2 id="關聯式資料庫簡介">關聯式資料庫簡介</h2>
<p>關聯式資料庫（Relational database）是建立在<strong>關聯模型</strong>基礎上的資料庫，藉助於集合代數等數學概念和方法來處理資料庫中的資料。<br>
現如今雖然對此模型有一些批評意見，但它還是資料儲存的傳統標準。<br>
標準資料查詢語言<strong>SQL</strong>就是一種基於關聯式資料庫的語言，這種語言執行對關聯式資料庫中資料的檢索和操作。</p>
<h2 id="關係鍵">關係鍵</h2>
<p>其實還有其他關係鍵，但這邊暫且用不到，所以只介紹主鍵與外鍵。</p>
<ul>
<li>
<p><code>主鍵(primary key)</code>資料庫表中對儲存資料物件予以唯一和完整標識的資料列或屬性的組合。<br>
一個資料表<strong>只能有一個主鍵，且主鍵的取值不能缺失，即不能為空值（Null）</strong>。</p>
</li>
<li>
<p><code>外鍵(foreign key)</code>是關聯式資料庫的重要組成部分。在關聯式資料庫中，每個資料表都是由關聯來連繫彼此的關係，父資料表（Parent Entity）的主鍵（primary key）會放在另一個資料表，當做屬性以建立彼此的關聯，而這個屬性就是外來鍵。</p>
</li>
</ul>
<h2 id="圖解">圖解</h2>
<p><img src="https://Z1Nhouse.github.io//post-images/1578550721047.png" alt=""><br>
事實上，departments還可以再增加許多內容，比如科系主任、科系教授數量...等。</p>
<p>students資料表的科系代碼欄位是屬於外鍵，departments資料表的科系代碼則是主鍵，students的外鍵對應到departments的主鍵，可以省略很多重複的資料。</p>
<p>之所以需要使用關聯資料表，是因為我們不希望在學生資料上記載關於科系的詳細資料，這兩份資料表有各自明確的功能，我們只需要創造兩張表的&quot;關聯&quot;，就可以在必要的時候查找資訊。</p>
]]></content>
    </entry>
</feed>