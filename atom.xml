<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Z1Nhouse.github.io/</id>
    <title>Z1N&apos;s house</title>
    <updated>2019-12-09T13:39:55.180Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Z1Nhouse.github.io/"/>
    <link rel="self" href="https://Z1Nhouse.github.io//atom.xml"/>
    <subtitle>System.out.print(&quot;Hello,World!&quot;);</subtitle>
    <logo>https://Z1Nhouse.github.io//images/avatar.png</logo>
    <icon>https://Z1Nhouse.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Z1N&apos;s house</rights>
    <entry>
        <title type="html"><![CDATA[Ruby 程式語言入門 - 安裝運行環境]]></title>
        <id>https://Z1Nhouse.github.io//post/g02aQkq5Z</id>
        <link href="https://Z1Nhouse.github.io//post/g02aQkq5Z">
        </link>
        <updated>2019-12-09T12:57:58.000Z</updated>
        <content type="html"><![CDATA[<p>之所以開始著手寫這個系列是因為想學Ruby on Rails，但是在學Ruby on Rails之前必須先了解Ruby，那就邊學習邊作筆記順便寫成文章，若學習過程中遇到的任何困難處也可以分享出來給更多的初學者，以避開一些坑，那麼今天要教的是Ruby的環境安裝，保證無論是否有程式基礎的人都可以輕鬆學會(只要你有過使用電腦的經驗...)，那麼廢話不多說直接開始吧。</p>
<h2 id="何謂ruby">何謂Ruby？</h2>
<p>Ruby是一種直譯式語言(interpretive)。它的靈感與特性來自於Perl、Smalltalk、Eiffel、Ada以及Lisp語言。由Ruby語言本身還發展出了JRuby（Java平台）、IronRuby（.NET平台）等其他平台的Ruby語言替代品。</p>
<h3 id="什麼是直譯式語言interpretive">什麼是直譯式語言(interpretive)？</h3>
<blockquote>
<p>直譯語言是一種程式語言類型。在執行時會一行一行的動態將程式碼直譯(interpret)為機器碼，並執行。直譯語言多半以動態語言(dynamic language)為主，具有靈活的型別處理，動態生成與程式彈性，但速度會比編譯式語言要慢一些。<br>
理論上，任何程式語言都可以是編譯式，或直譯式的。它們之間的區別，僅與程式的應用有關。許多程式語言同時採用編譯器與直譯器來實作，其中包括Lisp，Pascal，C，BASIC 與 Python。JAVA及C#採用混合方式，先將程式碼編譯為位元組碼，在執行時再進行直譯。<br>
---<a href="https://zh.wikipedia.org/wiki/%E7%9B%B4%E8%AD%AF%E8%AA%9E%E8%A8%80">維基百科</a></p>
</blockquote>
<p>直譯語言如 — JavaScript、Python、Ruby等等。</p>
<h2 id="ruby安裝">Ruby安裝</h2>
<ul>
<li>下載<a href="https://rubyinstaller.org/downloads/archives/">Ruby直譯器</a></li>
</ul>
<p>由於我是Windows10 x64，故之後所有的文章都是以Win10作為示範，若你是Linux或macOS系統可以使用第三方工具rbenv或RVM安裝。<br>
目前最新的穩定版本是2.6.5。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575897803782.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575897806647.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575897809776.PNG" alt=""></p>
<p>這邊提醒一下，建議下載Ruby+Devkit版本，原因如下：</p>
<blockquote>
<p>Ruby 2.4.0及更高版本使用MSYS2工具鏈作為開發套件。它作為可選組件捆綁到Ruby + Devkit安裝程序版本中，因此不需要其他下載/安裝。使用不帶Devkit版本的Ruby時，可以通過運行單獨安裝MSYS2 Devkit ridk install。<br>
MSYS2是構建Ruby的本機C / C ++擴展所必需的，而Ruby on Rails則是必需的。而且，它允許下載和使用Ruby gems可以依賴的數百個開源庫。</p>
</blockquote>
<p>安裝好之後進行安裝，傻瓜式安裝步驟不做演示，記得勾選把Ruby執行檔的位置加到系統的環境變數中。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575898070819.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575898073239.PNG" alt=""><br>
安裝Finish之後會自動幫你安裝MSYS2，安裝過程全程ENTER即可。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575898103882.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575898212922.PNG" alt=""></p>
<p>全部安裝完畢之後打開命令提示字元(cmd)輸入<code>ruby -v</code>測試一下安裝結果。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575898210252.PNG" alt=""><br>
至此為止，Ruby執行環境已經成功安裝。</p>
<p>打開編輯器，或是最基本的記事本，輸入指令<code>puts &quot;Hello World</code>並存成.rb副檔，打開cmd指向rb檔的位置，並輸入<code>ruby 檔名.rb</code>執行剛剛的程式。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575898496288.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575898552926.PNG" alt=""></p>
<h3 id="interactive-ruby是什麼">Interactive Ruby是什麼？</h3>
<p>在本地搜索Ruby可以搜索到Interactive Ruby，這是Ruby的指令互動環境，初學者只要知道這是可以讓你即時看到執行 Ruby 敘述的結果的程式就行。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575898246633.png" alt=""></p>
<p>輸入<code>puts &quot;Hello World&quot;</code>輸出Hello World。</p>
<blockquote>
<p>puts 是 Ruby 的基本輸出指令。<br>
=&gt; nil則是那一行敘述的執行結果。<br>
puts 總是回傳 nil，nil 在 Ruby 中表示一個絕對的空值。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575898316685.PNG" alt=""></p>
</blockquote>
<p>關於irb與ruby可以參考這篇文章：<a href="https://openhome.cc/Gossip/Ruby/IrbRubyUtility.html">https://openhome.cc/Gossip/Ruby/IrbRubyUtility.html</a></p>
<p>順帶一提，IDE的部分我是使用Visual Studio Code，不知道什麼是IDE可以看看<a href="https://zh.wikipedia.org/wiki/%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83">維基百科</a>。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【資料結構】平衡搜索樹 - 紅黑樹、B樹(2-3,2-3-4樹)、B+樹]]></title>
        <id>https://Z1Nhouse.github.io//post/5lQAWUQWk</id>
        <link href="https://Z1Nhouse.github.io//post/5lQAWUQWk">
        </link>
        <updated>2019-12-08T09:35:49.000Z</updated>
        <summary type="html"><![CDATA[<p>2-3樹與2-3-4樹為B樹的特例，所以特別拿出來細講。<br>
今天主要講解的內容包括：2-3樹、2-3-4樹、紅黑樹、B樹、B+樹。</p>
]]></summary>
        <content type="html"><![CDATA[<p>2-3樹與2-3-4樹為B樹的特例，所以特別拿出來細講。<br>
今天主要講解的內容包括：2-3樹、2-3-4樹、紅黑樹、B樹、B+樹。</p>
<!-- more -->
<h2 id="何謂平衡搜索樹">何謂「平衡搜索樹」？</h2>
<p>平衡搜索樹常見的有：<strong>AVL、紅黑樹、B樹(2-3與2-3-4樹都是B樹的特例)</strong></p>
<blockquote>
<p>平衡樹的定義：若非空樹，則必須滿足父節點的左子樹與右子樹高度差絕對值不大於1。<br>
這其中，AVL、紅黑樹皆屬於平衡二元搜索樹。</p>
</blockquote>
<p><strong>※平衡搜索樹（Balanced Search Tree）新增、刪除及搜索的時間複雜度皆為O(logn)</strong><br>
不同平衡搜索樹的高度(height)：</p>
<ul>
<li>AVL樹：高度≦logn</li>
<li>紅黑樹：高度≦2logn</li>
<li>2-3樹：高度≦logn</li>
<li>2-3-4樹：高度≦logn</li>
</ul>
<h2 id="專業術語">專業術語</h2>
<ul>
<li>節點(node)：用以代表資料(data)、狀態(state)。</li>
<li>樹根(root)：樹中最上層的節點，也是唯一一個父節點為null的節點。</li>
<li>子(Child)節點：一個節點的下一層節點。</li>
<li>子樹(subtree)：去掉根節點，其餘的節點可分割成任意個數互斥的集合，每一個集合也都符合樹的定義。</li>
<li>葉節點(leaf)：沒有child/subtree的節點。</li>
<li>分支(degree)：一個node擁有的子樹個樹。</li>
<li>階度(level)：以根節點的階度為1，其餘節點的階度為其父節點的階度+1。</li>
<li>高度(height)：此樹的最高階度。</li>
<li>siblings：擁有相同父節點的節點們，為兄弟節點。</li>
</ul>
<p>常見到有人說這是3階,4階的樹，這裡的3階指的是一個節點最多可以擁有三個子節點，4階則是指一個節點最多可以擁有四個子節點。</p>
<h2 id="2-3樹">2-3樹</h2>
<p>為何會叫2-3樹？原因為每個節點可以有2或3個子節點。</p>
<ol>
<li>滿足二元搜索樹的基本性質—左小右大，但不是二元樹(因為最多可以擁有三個子節點)。</li>
<li>節點可以放1或2個元素(1個元素時有2個孩子；2個元素時有3個孩子)</li>
<li>是一棵絕對平衡的樹(左右子樹高度一定相同，所有葉節點皆在同一level)</li>
</ol>
<p>當今天有2個元素(b,c)3個子節點時，左子節點≦b ; b&lt;中子節點≦c ; c&lt;右子節點<br>
如下圖所示<br>
<img src="https://Z1Nhouse.github.io//post-images/1575798693292.PNG" alt=""></p>
<h3 id="2-3樹的元素新增">2-3樹的元素新增</h3>
<p>假設今天有一筆資料<code>{53,23,77,45,11,2,44,77,93,26,32,16,87,11}</code><br>
按照搜索樹的性質依序加入資料，下方為新增的步驟<br>
<img src="https://Z1Nhouse.github.io//post-images/1575798934769.PNG" alt=""><br>
當輸入到77時，一個節點有3個元素，此時需要進行平衡。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575798939021.PNG" alt=""><br>
將53(大小位於中間的元素)往上提變成根節點，左子節點為23，右子節點為77。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575798995848.PNG" alt=""><br>
接著輸入45,11，當輸入到11時左子樹又有三個元素，因此需要再平衡。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575799165863.PNG" alt=""><br>
將23往上提，11與45分別拆成左、中子節點。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575799189813.PNG" alt=""><br>
接著輸入2,44,77。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575799298976.PNG" alt=""><br>
再輸入93時，右子樹的元素為3個，需要再次平衡，將77往上提，如此一來根節點變成3個元素，因此將53再往上提一層，左子樹為23右子樹為77。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575799452952.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575799456176.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575799458271.PNG" alt=""><br>
接著輸入26，一樣需要平衡。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575799568254.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575799571173.PNG" alt=""><br>
輸入32。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575799681696.PNG" alt=""><br>
輸入16，進行平衡。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575799730864.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575799767051.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575799769563.PNG" alt=""><br>
最後輸入87,11無須平衡，完成。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575799822760.PNG" alt=""></p>
<h3 id="2-3樹的元素刪除">2-3樹的元素刪除</h3>
<p>刪除的部分稍微麻煩一點，需要判斷刪除的元素位置，以剛剛我們建好的2-3樹為例：<br>
<img src="https://Z1Nhouse.github.io//post-images/1575799822760.PNG" alt=""></p>
<ul>
<li>
<p>假設今天要刪除<code>93</code>，不影響任何節點，直接刪除即可。</p>
</li>
<li>
<p>假設今天要刪除<code>16</code>，而16是11的右子節點，這個子節點中只有一個元素，則須將父節點的左子樹最大值拿來替補父節點，再用父節點替補刪除的節點16，如下圖所示。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575799953426.PNG" alt=""></p>
</li>
<li>
<p>假設今天要刪除<code>44</code>，44非葉節點，底下還有左子樹與右子樹，我們需要將左子樹的最大值來做替補。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575800160428.PNG" alt=""></p>
</li>
<li>
<p>假設今天我們要刪除根節點的<code>23</code>，那就顯得非常麻煩了，首先需要將根節點左子樹最大值11替補23，再將左子樹的11與其子節點11合併，最後將中子樹32與左子樹合併。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575800758833.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575800805619.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575800832554.PNG" alt=""></p>
</li>
<li>
<p>假設今天要刪除<code>77</code>(由根節點開始搜索，第一個碰到的77)，先將左子節點77替補父節點77，再將77與子節點87合併，再將根節點53替補為77與87的父節點，將左子樹的32替補為根節點，完成。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575800959792.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575800962053.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575800964694.PNG" alt=""></p>
</li>
</ul>
<h2 id="2-3-4樹">2-3-4樹</h2>
<p>為何會叫2-3-4樹？原因與2-3樹相同，只不過2-3-4樹的每個節點可以有2、3或4個子節點。</p>
<p>當一個節點有1個元素，則會有2個子節點，<br>
當一個節點有2個元素，則會有3個子節點，<br>
當一個節點有3個元素，則會有4個子節點。</p>
<p>與2-3樹的性質基本相同，可以參考2-3樹的介紹。</p>
<h3 id="2-3-4樹的元素新增">2-3-4樹的元素新增</h3>
<p>假設今天有一筆資料<code>{23,66,34,12,1,77,34,23,44,77,1}</code></p>
<p>加入資料23,66,34。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575801163272.PNG" alt=""><br>
再加入12時，根節點的元素變為4個，需要進行平衡，將中節點23往上提成根節點，12變為左子樹，右子樹為34與66。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575801237617.PNG" alt=""><br>
加入1,77。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575801270756.PNG" alt=""><br>
加入34後右子節點的元素變為4個，需要再次平衡，將中節點34往上提，左邊的34與右邊的66,77變為根節點的中、右子樹。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575801328302.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575801331864.PNG" alt=""></p>
<p>加入23,44。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575801462256.PNG" alt=""><br>
加入77後需要再次平衡。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575801575613.PNG" alt=""></p>
<p>輸入1之後左子節點變為4個元素，需要將中間元素1往上提，但此時根節點也變為4個元素，再次將根節點的中間元素23往上提，左子節點為1，右子節點為34,66。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575801578418.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575801597278.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575801622916.PNG" alt=""></p>
<h3 id="2-3-4樹的元素刪除">2-3-4樹的元素刪除</h3>
<p>拿上方建好的2-3-4樹作為例子。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575801622916.PNG" alt=""></p>
<ul>
<li>
<p>刪除葉節點的<code>12</code>，毫無影響直接刪除即可。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575801850522.PNG" alt=""></p>
</li>
<li>
<p>刪除非葉節點的<code>1</code>，將其左子節點的1提上來替補，再將1與23合併，最後將根節點23替補為左子樹，將右子樹最小值替補根節點進行平衡。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575801856084.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575801943259.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575801858586.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575802017706.PNG" alt=""></p>
</li>
<li>
<p>刪除根節點<code>34</code>，先將左子樹底下的最大值替補根節點，再將左子樹23替補34，最後將左子節點最大值替補父節點23。(請忽略敘述，直接看圖理解。)<br>
<img src="https://Z1Nhouse.github.io//post-images/1575802308925.png" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575802189223.PNG" alt=""></p>
</li>
</ul>
<h2 id="红黑樹redblack-tree">红黑樹(Red–black tree)</h2>
<p>根據《算法導論》中紅黑樹必滿足以下五種特性：</p>
<ol>
<li>每個節點要不是紅色的，不然就是黑色的。</li>
<li>根節點一定是黑色的。</li>
<li>樹葉節點(最後的空節點)一定是黑的。</li>
<li>如果一個節點是紅色，那他的子節點都是黑的。</li>
<li>從任意一個節點到葉子節點，經過的黑色節點數是一樣的。</li>
</ol>
<p>保持黑平衡(從根節點到葉子節點所經過的黑色節點數一樣)的二元樹，嚴格來說不是平衡二元樹。</p>
<h3 id="2-3-4樹轉換成红黑樹">2-3-4樹轉換成红黑樹</h3>
<p>一個2-3-4樹可以轉換成不止一種型態的紅黑樹，但一個紅黑樹僅能轉換成一種2-3-4樹。</p>
<p>假設根節點僅有一個元素，則將之設為紅黑樹的根節點；<br>
若根節點有一個以上的元素，則隨意取一個設為紅黑樹的根節點，要注意的是，同個節點拆分出來的元素是紅色的。</p>
<p>這是取自<a href="https://www.cnblogs.com/nullzx/p/6128416.html">nullzx</a>的圖<br>
<img src="https://Z1Nhouse.github.io//post-images/1575802847023.jpg" alt=""><br>
大致了解一下即可，只要了解二元搜索樹及紅黑樹的性質就可以輕鬆轉換。</p>
<blockquote>
<p>雖然紅黑樹和AVL樹的時間複雜度都為O(logn)，但是紅黑樹的高度(2logn)比AVL樹(logn)高，所以在紅黑樹上「查找」較AVL樹慢，儘管如此，紅黑樹卻比AVL樹重要且常用，原因為紅黑樹添加與刪除元素的速度較AVL樹快。<strong>若光只查詢，AVL樹查詢的速度快於紅黑樹；若需要頻繁的新增與刪除元素，紅黑樹則優於AVL樹。</strong></p>
</blockquote>
<h2 id="b樹b-tree">B樹(B-tree)</h2>
<p>B樹適用於讀寫相對大的數據塊的存儲系統，例如磁碟。B樹減少定位記錄時所經歷的中間過程，從而加快存取速度。B樹這種資料結構可以用來描述外部存儲。這種資料結構常被應用在資料庫和文件系統的實現上。</p>
<p>2-3與2-3-4樹都是B樹的特例。</p>
<p>若非空樹，則滿足：</p>
<ol>
<li>每個節點至多有m棵子樹(至多m-1個元素)</li>
<li>若根節點非終端，則至少有兩棵子樹。</li>
<li>除根節點外的所有非葉節點至少有⌈m/2⌉棵子樹。</li>
<li>[n,P0,K1,P1,K2....Kn,Pn] n=節點中元素個數；Ki為節點的元素且K1&lt;K2...；Pi為指向子樹根節點的指針</li>
<li>所有的葉節點出現在同一level。</li>
</ol>
<p>在此不多演示B樹的新增資料與刪除了，請參考2-3樹與2-3-4樹。<br>
詳情見：<a href="https://zh.wikipedia.org/wiki/B%E6%A0%91">B樹維基百科</a></p>
<h2 id="b樹">B+樹</h2>
<p>常用於數據庫和文件系統中的一種用於查找的資料結構。</p>
<p>B+與B樹的主要差異為：</p>
<ol>
<li>B+樹具有n個元素的節點只含有n棵子樹，每個元素對應一棵子樹，但是B樹n個元素會有n+1棵子樹。</li>
<li>葉節點包含資料，所有非葉節點則是索引作用，索引只含有對應子樹的最大元素和指向該子樹的指針，而B樹每個節點都是一個元素。</li>
<li>所有葉節點鏈結成一個單鏈表(由小到大)。</li>
</ol>
<p>B+樹示意圖(此處的關鍵字代表元素)<br>
<img src="https://images2018.cnblogs.com/blog/834468/201804/834468-20180406232853119-1460626460.png" alt=""><br>
圖片來源nullzx</p>
<h3 id="b樹的元素新增">B+樹的元素新增</h3>
<p>假設今天有一筆資料<code>{33,21,11,4,66,77,32,56}</code>，而此B+樹為3階。</p>
<p>首先加入資料33,21。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575803906400.PNG" alt=""><br>
加入11時由於此樹為3階，因此需要進行分裂，在此需要取中間值21作為索引key。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575803913991.PNG" alt=""><br>
加入4,66，需要進行分裂，將中間值33往上提作為索引key。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575804030133.PNG" alt=""><br>
加入77。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575804121178.PNG" alt=""><br>
加入32,56。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575804124551.PNG" alt=""></p>
<h3 id="b樹的元素刪除">B+樹的元素刪除</h3>
<p>使用上方建的B+樹進行示範。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575804124551.PNG" alt=""></p>
<ul>
<li>
<p>刪除<code>32</code>，直接刪除即可。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575804245714.PNG" alt=""></p>
</li>
<li>
<p>刪除<code>66</code>，要注意的是，刪除的是資料項66，而非索引的66，將剩餘的77往上提作為索引key。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575804267222.PNG" alt=""></p>
</li>
</ul>
<p>在此省略了刪除11的步驟。</p>
<ul>
<li>刪除<code>21</code>，將21索引與資料項刪除，將資料4與33,56連結在一起，再將根部的索引33與右子樹的索引77合併。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575804443747.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575804446458.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575804449235.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575804452522.PNG" alt=""></li>
</ul>
<p>就這樣~</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chrome必裝擴展—Tampermonkey油猴，只要有腳本什麼都能辦到！]]></title>
        <id>https://Z1Nhouse.github.io//post/XmgX1Z_xP</id>
        <link href="https://Z1Nhouse.github.io//post/XmgX1Z_xP">
        </link>
        <updated>2019-12-07T14:24:25.000Z</updated>
        <summary type="html"><![CDATA[<p>上至百度雲限速破解下至圖片、Youtube影片下載，只要一個擴展什麼都能輕鬆解決。<br>
最重要的是，免費而且簡單，不需要花費多少精力就可以達到效果，使用Chrome卻沒安裝油猴非常可惜！<br>
順帶一提，油猴擴展不止Chrome有，它還支援Edge、Safari、Firefox、Opera...瀏覽器，擴展根據瀏覽器的不同下載的位置也不同。</p>
]]></summary>
        <content type="html"><![CDATA[<p>上至百度雲限速破解下至圖片、Youtube影片下載，只要一個擴展什麼都能輕鬆解決。<br>
最重要的是，免費而且簡單，不需要花費多少精力就可以達到效果，使用Chrome卻沒安裝油猴非常可惜！<br>
順帶一提，油猴擴展不止Chrome有，它還支援Edge、Safari、Firefox、Opera...瀏覽器，擴展根據瀏覽器的不同下載的位置也不同。</p>
<!-- more -->
<h2 id="安裝油猴擴展">安裝油猴擴展</h2>
<p>如果你是可以直接進入Chrome線上應用程式商店的，你可以直接在擴展商店下載<a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo">油猴Tampermonkey</a>，這邊就不演示怎麼安裝擴展了。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575729741784.PNG" alt=""></p>
<p>若你無法進入Chrome的應用商店，你可以試試在<a href="https://www.crx4chrome.com/">Crx4Chrome</a>搜索Tampermonkey，直接下載<a href="https://www.crx4chrome.com/crx/755/">油猴的CRX檔</a><br>
<img src="https://Z1Nhouse.github.io//post-images/1575729695013.PNG" alt=""></p>
<h3 id="crx檔的安裝方式">CRX檔的安裝方式</h3>
<p>下載好擴展的CRX檔之後，打開瀏覽器輸入<code>chrome://extensions/</code>，將CRX檔拖入後啟用。</p>
<blockquote>
<p>【注：此處僅作範例，不是拿油猴擴展做示範。】<br>
<img src="https://Z1Nhouse.github.io//post-images/1575731356003.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575729476817.PNG" alt=""></p>
</blockquote>
<h4 id="暴力安裝法">暴力安裝法</h4>
<p>若是上方拖CRX檔安裝的方式仍然無法安裝，你可以嘗試把下載好的<code>xxx.crx</code>擴展名改為<code>xxx.zip</code><br>
瀏覽器打開<code>chrome://extensions/</code>右上方按鈕開啟<code>開發人員模式</code>，將<code>xxx.zip</code>文件拖移進去即可。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575730900180.PNG" alt=""></p>
<h2 id="安裝腳本">安裝腳本</h2>
<ul>
<li>在這邊推薦一個油猴腳本的網站：<a href="https://greasyfork.org/zh-CN">Greasy Fork</a><br>
支持中文，依據多種排序方式列出腳本，且都有詳細介紹腳本功能..等，非常適合新手用來搜索需要的腳本。</li>
<li>其他還有像是<a href="https://openuserjs.org/">OpenUserJS</a>、<a href="https://userscripts-mirror.org/">Userscripts.org</a>但這兩個網站都是全英文介面，如果你的英文能力足夠不妨也可以上去看看有沒有需要的腳本。</li>
</ul>
<ol>
<li>找到需要的腳本之後點擊&quot;安裝腳本&quot;。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575729959349.PNG" alt=""></li>
<li>點擊&quot;安裝&quot;。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575729964532.PNG" alt=""></li>
<li>腳本安裝完畢之後在瀏覽器上方點擊油猴圖標，打開控制台。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575729983239.PNG" alt=""></li>
<li>【控制台-已安裝的腳本】可執行啟用、刪除、更新腳本...等操作。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575730060278.PNG" alt=""></li>
<li>之後只要在有腳本適配的網站就能看見相對應腳本，你可以根據當前需求啟用或者關閉。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575730428350.PNG" alt=""></li>
</ol>
<h2 id="相關網站">相關網站</h2>
<ul>
<li><a href="https://www.tampermonkey.net/">油猴官網</a></li>
<li><a href="https://www.crx4chrome.com/">Crx4Chrome</a></li>
<li><a href="https://openuserjs.org/">OpenUserJS</a></li>
<li><a href="https://userscripts-mirror.org/">Userscripts.org</a></li>
<li><a href="https://greasyfork.org/zh-CN">Greasy Fork</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[用Chrome瀏覽器玩轉Youtube！影片、音頻下載、擷動圖、純音頻模式...]]></title>
        <id>https://Z1Nhouse.github.io//post/TYUbUGb80</id>
        <link href="https://Z1Nhouse.github.io//post/TYUbUGb80">
        </link>
        <updated>2019-12-07T14:02:55.000Z</updated>
        <summary type="html"><![CDATA[<p>事前聲明：會使用到Chrome擴展以及油猴腳本，非瀏覽器自帶。</p>
]]></summary>
        <content type="html"><![CDATA[<p>事前聲明：會使用到Chrome擴展以及油猴腳本，非瀏覽器自帶。</p>
<!-- more -->
<h2 id="chrome擴展">Chrome擴展</h2>
<ul>
<li><a href="https://chrome.google.com/webstore/detail/%C2%AByou-clever%C2%BB-%E2%80%94-videocombi/agdpdlplhmfgonalmdooaojempaoncmp">«You Clever» — videocombine for Youtube™</a></li>
</ul>
<p>功能：</p>
<ol>
<li>可擷取當前畫面高清圖片</li>
<li>可隨時錄製GIF</li>
<li>可切換成音頻模式</li>
<li>最小化窗口</li>
<li>自動全屏<br>
....等，其他請自行查看介紹。</li>
</ol>
<ul>
<li>純音頻模式<br>
<img src="https://Z1Nhouse.github.io//post-images/1575728408060.PNG" alt=""></li>
<li>影片截圖<br>
<img src="https://Z1Nhouse.github.io//post-images/1575728410331.PNG" alt=""></li>
<li>擷取GIF<br>
<img src="https://Z1Nhouse.github.io//post-images/1575728413290.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575728415817.PNG" alt=""><br>
GIF效果<br>
<img src="https://Z1Nhouse.github.io//post-images/1575728398806.gif" alt=""></li>
</ul>
<h2 id="油猴腳本">油猴腳本</h2>
<p>關於油猴擴展的使用方式我有寫過一篇文章，請參考<a href="https://z1nhouse.github.io/post/XmgX1Z_xP">Chrome必裝擴展—Tampermonkey油猴，只要有腳本什麼都能辦到！</a></p>
<ul>
<li><a href="https://www.tampermonkey.net/">油猴官網</a></li>
<li><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-TW">油猴擴展</a></li>
</ul>
<ol>
<li>安裝好油猴擴展之後，打開<a href="https://greasyfork.org/zh-TW">油猴腳本分享站Greasy Fork</a></li>
<li>搜索Youtube可以查到相關的腳本，依據個人需求安裝。(或者也可以使用我下方推薦的幾個腳本)</li>
</ol>
<p>在這邊推薦幾個我使用過認為值得安裝的腳本</p>
<ul>
<li><a href="https://greasyfork.org/zh-TW/scripts/391134-%E9%9A%90%E8%97%8Fyoutube%E5%B9%BF%E5%91%8A-%E8%87%AA%E5%8A%A8%E7%82%B9%E5%87%BB%E8%B7%B3%E8%BF%87%E5%B9%BF%E5%91%8A-%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91-%E5%85%8D%E8%B4%B9%E8%BF%98%E4%B8%8D%E9%99%90%E6%B5%81%E9%87%8F-%E4%B8%8Ayoutube%E7%9C%8B%E8%A7%86%E9%A2%91%E7%A8%B3%E5%AE%9A1080p-%E7%A0%B4%E8%A7%A3%E8%BD%AF%E4%BB%B6%E6%9B%B4%E5%A4%9A%E7%A6%8F%E5%88%A9%E7%AD%89%E4%BD%A0%E6%9D%A5">隐藏youtube广告，自动点击跳过广告;科学上网，免费还不限流量。上youtube看视频稳定1080P。破解软件更多福利等你来！</a><br>
功能：跳過煩人的廣告。</li>
</ul>
<p>相同功能的還有<a href="https://greasyfork.org/zh-CN/scripts/9165-auto-close-youtube-ads">Auto Close YouTube Ads</a></p>
<ul>
<li><a href="https://greasyfork.org/en/scripts/20015-simple-youtube-mp3-button">Simple YouTube MP3 Button</a><br>
功能：直接將Youtube影片以MP3檔案類型下載。</li>
</ul>
<blockquote>
<p><img src="https://greasyfork.org/system/screenshots/screenshots/000/004/365/original/1.png" alt=""><br>
<img src="https://greasyfork.org/system/screenshots/screenshots/000/004/366/original/2.png" alt=""></p>
</blockquote>
<ul>
<li><a href="https://greasyfork.org/zh-TW/scripts/369418-the-best-youtube-downloader-download-video-mp4-avi-mp3-hd-1080p-2k-4k-8k">The best Youtube Downloader, download video MP4, AVI, MP3, HD, 1080P, 2K, 4k &amp; 8K</a><br>
功能：下載MP4,AVI影片以及MP3音頻</li>
</ul>
<blockquote>
<p>安裝腳本後重開Youtube影片就可以看見影片下方有Download Video的按鈕，根據個人需求下載。<br>
<img src="https://Z1Nhouse.github.io//post-images/1575731533383.PNG" alt=""><br>
<img src="https://Z1Nhouse.github.io//post-images/1575728405047.png" alt=""></p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[將Visual Studio Code語言修改為繁體中文]]></title>
        <id>https://Z1Nhouse.github.io//post/UnHCMUvkF</id>
        <link href="https://Z1Nhouse.github.io//post/UnHCMUvkF">
        </link>
        <updated>2019-12-07T07:54:36.000Z</updated>
        <summary type="html"><![CDATA[<p>VS Code安裝後的介面預設語言為英文，若想將軟體語言改為繁體中文請參照以下方式修改。</p>
]]></summary>
        <content type="html"><![CDATA[<p>VS Code安裝後的介面預設語言為英文，若想將軟體語言改為繁體中文請參照以下方式修改。</p>
<!-- more -->
<h2 id="vs-code命令面板">【VS Code命令面板】</h2>
<p>用於輸入指令。</p>
<ul>
<li>Mac：<code>cmd+shift+p</code>或<code>f1</code></li>
<li>Windows/Linux：<code>ctrl+shift+p</code>或<code>f1</code></li>
</ul>
<h2 id="修改方式">修改方式</h2>
<ol>
<li>打開VS Code，按下<code>f1</code>打開命令面板，輸入<code>lang</code>，選擇<code>Configure Display Language</code><br>
<img src="https://Z1Nhouse.github.io//post-images/1575705298348.PNG" alt=""></li>
<li>在左側找到<code>Chinese(Traditional) Language Pack for VS Code</code>，點擊下方藍色的<code>install</code><br>
<img src="https://Z1Nhouse.github.io//post-images/1575705301533.PNG" alt=""></li>
<li>安裝成功之後重啟VS Code即可。</li>
</ol>
<h2 id="其他">其他</h2>
<p>關於VS Code的其他tips請參考官方文件：<a href="https://github.com/Microsoft/vscode-tips-and-tricks">https://github.com/Microsoft/vscode-tips-and-tricks</a></p>
]]></content>
    </entry>
</feed>